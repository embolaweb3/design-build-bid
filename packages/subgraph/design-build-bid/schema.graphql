type BidSelected @entity(immutable: true) {
  id: Bytes!
  projectId: BigInt! # uint256
  project: ProjectPosted @derivedFrom(field: "projectId")
  selectedBidder: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type BidSubmitted @entity(immutable: true) {
  id: Bytes!
  bidId: BigInt! # uint256
  projectId: BigInt! # uint256
  project: ProjectPosted @derivedFrom(field: "projectId")
  bidder: Bytes! # address
  bidAmount: BigInt! # uint256
  completionTime: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DisputeRaised @entity(immutable: true) {
  id: Bytes!
  disputeId: BigInt! # uint256
  projectId: BigInt! # uint256
  project: ProjectPosted @derivedFrom(field: "projectId")
  disputant: Bytes! # address
  reason: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  resolution: DisputeResolved @derivedFrom(field: "disputeId")
}

type DisputeResolved @entity(immutable: true) {
  id: Bytes!
  disputeId: BigInt! # uint256
  dispute: DisputeRaised @derivedFrom(field: "disputeId")
  result: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MilestonePaid @entity(immutable: true) {
  id: Bytes!
  projectId: BigInt! # uint256
  project: ProjectPosted @derivedFrom(field: "projectId")
  milestoneIndex: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ProjectPosted @entity(immutable: true) {
  id: Bytes!
  projectId: BigInt! # uint256
  owner: Bytes! # address
  description: String! # string
  budget: BigInt! # uint256
  deadline: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  bids: [BidSubmitted!]! @derivedFrom(field: "projectId")
  selectedBid: BidSelected @derivedFrom(field: "projectId")
  milestones: [MilestonePaid!]! @derivedFrom(field: "projectId")
  disputes: [DisputeRaised!]! @derivedFrom(field: "projectId")
}
